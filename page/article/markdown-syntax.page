---
title: Markdown Formatting Guide
description: Guides for using <strong>Markdown</strong>.
type: HTML
...

<h3>Paragraph</h3><p>Separate each line of text with two or more new line character to create a paragraph element on each piece:</p><pre><code class="markdown">Paragraph one.

Paragraph two.</code></pre><p>Result:</p><pre><code class="html">&lt;p&gt;Paragraph one.&lt;/p&gt;

&lt;p&gt;Paragraph two.&lt;/p&gt;</code></pre><h3>Line Break</h3><p>Add two or more spaces at the end of the line you want to break:</p><pre><code class="markdown">Line one.  ← here!
Line two.</code></pre><p>Result:</p><pre><code class="html">Line one.&lt;br&gt;
Line two.</code></pre><h3>Italic</h3><p>Text wrapped with one <code>*</code> or <code>_</code> will be replaced by <code>&lt;em&gt;</code> tag:</p><pre><code class="markdown">*italic*

_italic_</code></pre><p>Result:</p><pre><code class="html">&lt;em&gt;italic&lt;/em&gt;

&lt;em&gt;italic&lt;/em&gt;</code></pre><h3>Bold</h3><p>Double <code>*</code>’s or <code>_</code>’s will be replaced by <code>&lt;strong&gt;</code> tag:</p><pre><code class="markdown">**bold**

__bold__</code></pre><p>Result:</p><pre><code class="html">&lt;strong&gt;bold&lt;/strong&gt;

&lt;strong&gt;bold&lt;/strong&gt;</code></pre><h3>Bold-Italic</h3><pre><code class="markdown">***bold-italic***

___bold-italic___

**_bold-italic_**

__*bold-italic*__

*__italic-bold__*

_**italic-bold**_</code></pre><h3>Header</h3><p>Headers can be created by underlining the text with equal or dash sign (for first-level and second-level headers only):</p><pre><code class="markdown">Header 1
========

Header 2
--------</code></pre><p>Any number of underlining <code>=</code>’s or <code>-</code>’s will work:</p><pre><code class="html">&lt;h1&gt;Header 1&lt;/h1&gt;

&lt;h2&gt;Header 2&lt;/h2&gt;</code></pre><p>Another syntax by using some leading <code>#</code> with the same amount as the header level:</p><pre><code class="markdown"># Header 1
## Header 2
### Header 3
#### Header 4
##### Header 5
###### Header 6</code></pre><p>This also work:</p><pre><code class="markdown"># Header 1 #
## Header 2 ##
### Header 3 ###
#### Header 4 ####
##### Header 5 #####
###### Header 6 ######</code></pre><h3>Block Quote</h3><p>Begin each line of paragraph with the <code>&gt;</code> symbol to wrap them in a <code>&lt;blockquote&gt;</code> element:</p><pre><code class="markdown">&gt; This is a paragraph in a block quote.
&gt;
&gt; This is also a paragraph in a block quote.</code></pre><p>Result:</p><pre><code class="html">&lt;blockquote&gt;
  &lt;p&gt;This is a paragraph in a block quote.&lt;/p&gt;
  &lt;p&gt;This is also a paragraph in a block quote.&lt;/p&gt;
&lt;/blockquote&gt;</code></pre><p>Nested block quotes example:</p><pre><code class="markdown">&gt; This is the first level of quoting.
&gt;
&gt; &gt; This is nested block quote.
&gt;
&gt; Back to the first level.</code></pre><h3>List</h3><h4 class="toc-stage" id="reference:unordered-list">Unordered List</h4><p>Use <code>*</code>, <code>-</code> or <code>+</code> at the beginning of text to create unordered list items:</p><pre><code class="markdown">* List item 1
* List item 2
* List item 3</code></pre><pre><code class="markdown">- List item 1
- List item 2
- List item 3</code></pre><pre><code class="markdown">+ List item 1
+ List item 2
+ List item 3</code></pre><p>Result:</p><pre><code class="html">&lt;ul&gt;
  &lt;li&gt;List item 1&lt;/li&gt;
  &lt;li&gt;List item 2&lt;/li&gt;
  &lt;li&gt;List item 3&lt;/li&gt;
&lt;/ul&gt;</code></pre><h4 class="toc-stage" id="reference:ordered-list">Ordered List</h4><p>Use numbers followed by periods at the beginning of text to create ordered list items:</p><pre><code class="markdown">1. List item 1
2. List item 2
3. List item 3</code></pre><blockquote><p><strong>Note:</strong> The actual numbers you use to mark the list have no effect on the <abbr title="Hyper Text Markup Language">HTML</abbr> output Markdown produces. So, this will also work:</p><pre><code class="markdown">9. List item 1
1. List item 2
7. List item 3</code></pre></blockquote><p>Result:</p><pre><code class="html">&lt;ol&gt;
  &lt;li&gt;List item 1&lt;/li&gt;
  &lt;li&gt;List item 2&lt;/li&gt;
  &lt;li&gt;List item 3&lt;/li&gt;
&lt;/ol&gt;</code></pre><h4 class="toc-stage" id="reference:nested-list-items">Nested List Items</h4><pre><code class="markdown">1. Lists item 1
   - List item 1.1
   - List item 1.2
     1. List item 1.2.1
   - List item 1.3
2. List item 2</code></pre><p>Result:</p><pre><code class="html">&lt;ol&gt;
  &lt;li&gt;Lists item 1
    &lt;ul&gt;
      &lt;li&gt;List item 1.1&lt;/li&gt;
      &lt;li&gt;List item 1.2
        &lt;ol&gt;
          &lt;li&gt;List item 1.2.1&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;List item 1.3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;List item 2&lt;/li&gt;
&lt;/ol&gt;</code></pre><h4 class="toc-stage" id="reference:paragraphs-in-list-items">Paragraphs in List Items</h4><p>If list items are separated by blank lines, Markdown will wrap the items in <code>&lt;p&gt;</code> tags in the <abbr title="Hyper Text Markup Language">HTML</abbr> output:</p><pre><code class="markdown">* List item 1

* List item 2

  Another paragraph in list item two.</code></pre><p>Result:</p><pre><code class="html">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;List item 1&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;List item 2&lt;/p&gt;
    &lt;p&gt;Another paragraph in list item two.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</code></pre><h3>Code</h3><h4 class="toc-stage" id="reference:inline-code">Inline Code</h4><p>To create a code span, wrap the text you want with a backtick:</p><pre><code class="markdown">This is a paragraph with some `inline code` in it.</code></pre><p>Result:</p><pre><code class="html">&lt;p&gt;This is a paragraph with some &lt;code&gt;inline code&lt;/code&gt; in it.&lt;/p&gt;</code></pre><p>To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:</p><pre><code class="markdown">``There is a literal backtick (`) here.``</code></pre><h4 class="toc-stage" id="reference:block-code">Block Code</h4><p>Indent some paragraph with 4 spaces or a tab to wrap them in a <code>&lt;pre&gt;</code> and <code>&lt;code&gt;</code> tag, and also automatically escape the <abbr title="Hyper Text Markup Language">HTML</abbr> code in it:</p><pre><code class="markdown">This is a normal paragraph.

    This is a code block with some &lt;abbr&gt;HTML&lt;/abbr&gt; markup.

This is another normal paragraph.</code></pre><p>A code block continues until it reaches a line that is not indented (or the end of the article):</p><pre><code class="html">&lt;p&gt;This is a normal paragraph.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is a code block with some &amp;lt;abbr&amp;gt;HTML&amp;lt;/abbr&amp;gt; markup.&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is another normal paragraph.&lt;/p&gt;</code></pre><h5 class="toc-stage" id="reference:markdown-extra-s-fenced-code-block-syntax">Markdown Extra’s Fenced Code Block Syntax</h5>
<p>The code block starts with a line containing three or more tilde or backtick characters, and ends with the first line with the same number of tilde or backtick characters:</p><pre><code class="markdown">~~~~~~~~~~~~~~~~~~~~~
This is a code block.
~~~~~~~~~~~~~~~~~~~~~</code></pre><pre><code class="markdown">`````````````````````
This is a code block.
`````````````````````</code></pre><p>You can also specify a class name that will be applied to a code block like this:</p><pre><code class="markdown">~~~~~~~~~~~~~~~~~~~~~~~~~ .html
&lt;p&gt;Example HTML code.&lt;/p&gt;
~~~~~~~~~~~~~~~~~~~~~~~~~</code></pre><p>In the <abbr title="Hyper Text Markup Language">HTML</abbr> output, code block attributes will be applied on the <code>&lt;code&gt;</code> element:</p><pre><code class="html">&lt;pre&gt;&lt;code class="html"&gt;&amp;lt;p&amp;gt;Example HTML code.&amp;lt/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;</code></pre><h3>Horizontal Rule</h3><p>Create horizontal rule by placing three or more hyphens, asterisks, or underscores on a line by themselves. You may use spaces between the hyphens or asterisks. Each of the following lines will produce a horizontal rule:</p><pre><code class="markdown">* * *

***

*****

- - -

---------------------------------------</code></pre><h3>Link</h3><p>Markdown supports two style of links: <a href="#reference:inline-link">inline</a> and <a href="#reference:referenced-link">reference</a>.</p><h4 class="toc-stage" id="reference:inline-link">Inline Link</h4><p>To create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the <abbr title="Uniform Resource Locator">URL</abbr> where you want the link to point, along with an optional title for the link, surrounded in quotes:</p><pre><code class="markdown">This is [an example](http://example.com "Title") inline link.

[This link](http://example.net) has no title attribute.</code></pre><p>Result:</p><pre><code class="html">&lt;p&gt;This is &lt;a href="http://example.com" title="Title"&gt;
an example&lt;/a&gt; inline link.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://example.net"&gt;This link&lt;/a&gt; has no
title attribute.&lt;/p&gt;</code></pre><h4 class="toc-stage" id="reference:referenced-link">Referenced Link</h4><p>Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:</p><pre><code class="markdown">This is [an example][id] reference-style link.</code></pre><p>Then, anywhere in the document, you define your link label like this, on a line by itself:</p><pre><code>[id]: http://example.com "Optional Title"</code></pre><p>The following three link definitions are equivalent:</p><pre><code class="markdown">[foo]: http://example.com "Optional Title Here"
[foo]: http://example.com 'Optional Title Here'
[foo]: http://example.com (Optional Title Here)</code></pre><p>The link <abbr title="Uniform Resource Locator">URL</abbr> may, optionally, be surrounded by angle brackets:</p><pre><code class="markdown">[id]: &lt;http://example.com&gt; "Optional Title Here"</code></pre><p>Link definitions can be placed anywhere in your Markdown document. But if you want, you can put them all at the end of your document, sort of like footnotes.</p><h4 class="toc-stage" id="reference:implicit-link-name-shortcut">Implicit Link Name Shortcut</h4><p>The implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets:</p><pre><code class="markdown">[Google][]</code></pre><p>And then define the link:</p><pre><code class="markdown">[Google]: https://www.google.com</code></pre><h4 class="toc-stage" id="reference:automatic-link">Automatic Link</h4><p>If you want to show the actual text of a <abbr title="Uniform Resource Locator">URL</abbr> or email address, and also have it be a clickable link, you can do this:</p><pre><code class="markdown">&lt;http://example.com&gt;

&lt;address@example.com&gt;</code></pre><p>Markdown will turn the text into this:</p><pre><code class="html">&lt;a href="http://example.com"&gt;http://example.com&lt;/a&gt;

&lt;a href="&amp;#109;&amp;#x61;&amp;#x69;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#x61;&amp;#x64;&amp;#100;&amp;#114;&amp;#x65;&amp;#115;&amp;#115;&amp;#x40;&amp;#101;&amp;#120;&amp;#x61;m&amp;#112;&amp;#x6c;e&amp;#46;&amp;#x63;&amp;#x6f;&amp;#109;"&gt;&amp;#x61;&amp;#x64;&amp;#100;&amp;#114;&amp;#x65;&amp;#115;&amp;#115;&amp;#x40;&amp;#101;&amp;#120;&amp;#x61;m&amp;#112;&amp;#x6c;e&amp;#46;&amp;#x63;&amp;#x6f;&amp;#109;&lt;/a&gt;</code></pre><h3>Image</h3><p>Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: <a href="#reference:inline-image">inline</a> and <a href="#reference:referenced-image">reference</a>.</p><h4 class="toc-stage" id="reference:inline-image">Inline Image</h4><pre><code class="markdown">![alt text](path/to/image.jpg)

![alt text](path/to/image.jpg "Optional Title")</code></pre><p>Result:</p><pre><code class="html">&lt;p&gt;&lt;img alt="alt text" src="path/to/image.jpg"&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="alt text" src="path/to/image.jpg" title="Optional Title"&gt;&lt;/p&gt;</code></pre><h4 class="toc-stage" id="reference:referenced-image">Referenced Image</h4><p>Reference-style image syntax looks like this:</p><pre><code class="markdown">![alt text][id]</code></pre>
<p>Where <var>id</var> is the name of a defined image reference. Image references are defined using syntax identical to link references:</p><pre><code class="markdown">[id]: path/to/image.jpg  "Optional Title"</code></pre><h3>Table</h3><p>The first line contains column headers. Second line contains a mandatory separator line between the headers and the content. Each following line is a row in the table. Columns are always separated by the pipe (<code>|</code>) character:</p><pre><code class="markdown">Table Header 1 | Table Header 2
-------------- | --------------
Table Cell 1.1 | Table Cell 1.2
Table Cell 2.1 | Table Cell 2.2
Table Cell 3.1 | Table Cell 3.2</code></pre><p>or …</p><pre><code class="markdown">| Table Header 1 | Table Header 2 |
| -------------- | -------------- |
| Table Cell 1.1 | Table Cell 1.2 |
| Table Cell 2.1 | Table Cell 2.2 |
| Table Cell 3.1 | Table Cell 3.2 |</code></pre><p>Result:</p><pre><code class="html">&lt;table class="border"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Table Header 1&lt;/th&gt;
      &lt;th&gt;Table Header 2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Table Cell 1.1&lt;/td&gt;
      &lt;td&gt;Table Cell 1.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Table Cell 2.1&lt;/td&gt;
      &lt;td&gt;Table Cell 2.2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Table Cell 3.1&lt;/td&gt;
      &lt;td&gt;Table Cell 3.2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</code></pre><h4 class="toc-stage" id="reference:table-alignments">Table Alignments</h4><p>Add some colons to the separator lines. A colon that added at the left of the separator line will make the column left-aligned. A colon that added at the right of the separator line will make the column right-aligned. Colons that added at both side means the column is center-aligned:</p><pre><code class="markdown">Table Header 1 | Table Header 2 | Table Header 3
-------------: | :------------: | :-------------
Table Cell 1.1 | Table Cell 1.2 | Table Cell 1.3
Table Cell 2.1 | Table Cell 2.2 | Table Cell 2.3
Table Cell 3.1 | Table Cell 3.2 | Table Cell 3.3</code></pre><p>Result:</p><pre><code class="html">&lt;table class="border"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th class="text-right"&gt;Table Header 1&lt;/th&gt;
      &lt;th class="text-center"&gt;Table Header 2&lt;/th&gt;
      &lt;th class="text-left"&gt;Table Header 3&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td class="text-right"&gt;Table Cell 1.1&lt;/td&gt;
      &lt;td class="text-center"&gt;Table Cell 1.2&lt;/td&gt;
      &lt;td class="text-left"&gt;Table Cell 1.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class="text-right"&gt;Table Cell 2.1&lt;/td&gt;
      &lt;td class="text-center"&gt;Table Cell 2.2&lt;/td&gt;
      &lt;td class="text-left"&gt;Table Cell 2.3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class="text-right"&gt;Table Cell 3.1&lt;/td&gt;
      &lt;td class="text-center"&gt;Table Cell 3.2&lt;/td&gt;
      &lt;td class="text-left"&gt;Table Cell 3.3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</code></pre><h3>Definition List</h3><p>Definition list in Markdown Extra is made of a single-line term followed by a colon and the definition for that term:</p><pre><code class="markdown">Title 1
: Definition of Title 1 goes here.

Title 2
: Definition of Title 2 goes here.</code></pre><p>Colons as definition markers may be indented by up to three spaces and must be followed at least by one space or tab:</p><pre><code class="html">&lt;dl&gt;
  &lt;dt&gt;Title 1&lt;/dt&gt;
  &lt;dd&gt;Definition of Title 1 goes here.&lt;/dd&gt;
  &lt;dt&gt;Title 2&lt;/dt&gt;
  &lt;dd&gt;Definition of Title 2 goes here.&lt;/dd&gt;
&lt;/dl&gt;</code></pre>
<p>Definition lists can have more than one definition associated with one term:</p><pre><code class="markdown">Title 1
: Definition of Title 1 goes here.
: Another definition of Title 1 goes here.

Title 2
: Definition of Title 2 goes here.</code></pre><p>You can also associate more than one term to a definition:</p><pre><code class="markdown">Term 1
Term 2
: Definition A

Term 3
: Definition B</code></pre><p>If a definition is preceded by a blank line, Markdown Extra will wrap the definition in <code>&lt;p&gt;</code> tags in the <abbr title="Hyper Text Markup Language">HTML</abbr> output:</p><pre><code class="markdown">Title 1

: Definition of Title 1 goes here.

  Another paragraph of Title 1’s definition goes here.

Title 2

: Definition of Title 2 goes here.</code></pre><h3>Footnote</h3><p>A footnote is made of two things: 1). A marker in the text that will become a superscript number 2). A footnote definition that will be placed in a list of footnotes at the end of the document:</p><pre><code class="markdown">This is some text with a footnote. [^1]

[^1]: And this is the footnote.</code></pre><p>Footnote definitions can be found anywhere in the document, but footnotes will always be listed in the order they are linked to in the text. You cannot make two links to the same footnotes:</p><pre><code class="html">&lt;p&gt;This is some text with a footnote. &lt;sup id="fnref:1"&gt;&lt;a href="#fn:1" class="footnote-ref"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class="footnotes"&gt;
  &lt;hr&gt;
  &lt;ol&gt;
    &lt;li id="fn:1"&gt;
      &lt;p&gt;And this is the footnote. &lt;a href="#fnref:1" class="footnote-backref"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</code></pre><h3>Abbreviation</h3><p>Abbreviations can be created by writing some definitions at the bottom of the document like this:
<pre><code class="markdown">*[HTML]: Hyper Text Markup Language
*[CSS]: Cascading Style Sheet</code></pre><p>This will automatically change all text that matches with the text that is in the bracket to be like this:</p><pre><code class="html">Some text with &lt;abbr title="Hyper Text Markup Language"&gt;HTML&lt;/abbr&gt; and &lt;abbr title="Cascading Style Sheet"&gt;CSS&lt;/abbr&gt;.</code></pre><p>Abbreviations are case-sensitive, and will span on multiple words when defined as such. An abbreviation may also have an empty definition:</p><pre><code class="markdown">*[PHP]:</code></pre><h3>Special Attributes</h3><p>You can set the ID and class attribute on certain elements using an attribute block:</p><pre><code class="markdown">Header 1 {#header-1}
&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;

## Header 2 {#header-2}</code></pre><p>The code above will produce:</p><pre><code class="html">&lt;h1 id="header-1"&gt;Header 1&lt;/h1&gt;

&lt;h2 id="header-2"&gt;Header 2&lt;/h2&gt;</code></pre><p>To add a class name, use a dot:</p><pre><code class="markdown">Header 1 {.header-1}
&#61;&#61;&#61;&#61;&#61;&#61;&#61;&#61;

## Header 2 {.header-2.main}</code></pre><p>The code above will produce:</p><pre><code class="html">&lt;h1 class="header-1"&gt;Header 1&lt;/h1&gt;

&lt;h2 class="header-2 main"&gt;Header 2&lt;/h2&gt;</code></pre><p>Mixing ID and some class attributes in one element:</p><pre><code class="markdown">## Header 2 {.main.media-head#the-site}</code></pre><p>Special attribute blocks can be used with:</p><ol><li><a href="#reference:header">Headers</a></li><li><a href="#reference:markdown-extra-s-fenced-code-block-syntax">Fenced Code Blocks</a></li><li><a href="#reference:link">Links</a></li><li><a href="#reference:image">Images</a></li></ol><h3>Escaping</h3><p>Add a backslash at the begining of character to escape them from Markdown parser:</p><pre><code class="markdown">1986. This will become a list item.

1986\. This will not.</code></pre><h3>Not a Replacement for <abbr title="Hyper Text Markup Language">HTML</abbr></h3><p>Markdown is not intended as a replacement for <abbr title="Hyper Text Markup Language">HTML</abbr>. If you want to use <abbr title="Hyper Text Markup Language">HTML</abbr> code because the Markdown syntax was not possible to create it (for example, you want to add <code>width</code> and <code>height</code> attribute to an image) then you can just put it as the <abbr title="Hyper Text Markup Language">HTML</abbr> itself.</p><p>By default, Markdown will not process the syntax within a block element, so the bold syntax in this example will not be turned into <code>&lt;strong&gt;</code> element:</p><pre><code class="markdown">&lt;div&gt;This is not a **bold** text.&lt;/div&gt;</code></pre><p>You can disable this behavior by adding a <code>markdown</code> attribute on the block element wrapper with the value greater than zero:</p><pre><code class="markdown">&lt;div markdown="1"&gt;This is a **bold** text.&lt;/div&gt;</code></pre>
<blockquote><h3>Extras</h3><p><strong>Mecha</strong> uses <a href="https://github.com/tovic/parsedown-extra-plugin" rel="nofollow" target="_blank">this</a> plugin to enable some features that are not available in the original Parsedown Extra extension. These extra features include:</p><ul><li>Pre–defined abbreviations.</li><li>Pre–defined links and images.</li><li>Ability to detect external link <abbr title="Uniform Resource Locator">URL</abbr>s.</li><li>Advance attributes parser. This feature allows you to write literal <abbr title="Hyper Text Markup Language">HTML</abbr> attributes in the attribute block like: <code>{#foo.bar.baz width="300" height="250"}</code></li></ul></blockquote><hr><h3>Reference</h3><ul><li><a href="http://daringfireball.net/projects/markdown/syntax/" rel="nofollow" target="_blank">Daring Fireball – Markdown Syntax Documentation</a></li><li><a href="http://michelf.ca/projects/php-markdown/extra/" rel="nofollow" target="_blank">Michel Fortin – PHP Markdown Extra</a></li><li><a href="http://parsedown.org/extra/" rel="nofollow" target="_blank">Parsedown – Better Markdown Parser in PHP</a></li><li><a href="https://github.com/tovic/parsedown-extra-plugin" rel="nofollow" target="_blank">GitHub – Configurable Markdown to HTML Converter with Parsedown Extra Plugin</a></li></ul>