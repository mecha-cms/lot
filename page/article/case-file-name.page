---
title: File Naming Best Practices
description: Mecha has some disciplines in naming their files.
...

### General

In general, Mecha uses `^[a-z\d]+(?:-[a-z\d]+)*(?:\.[a-z\d]+)?$` pattern to name a file, which means:

 - All characters are in lower-case mode, including the file extension.
 - File name should only contains `a`, `b`, `c`, `d`, `e`, `f`, `g`, `h`, `i`, `j`, `k`, `l`, `m`, `n`, `o`, `p`, `q`, `r`, `s`, `t`, `u`, `v`, `w`, `x`, `y`, `z`, `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9` and `-` characters.
 - Each word can be connected with a `-`, but you canâ€™t repeat `-` character in a file name.

~~~ .txt
foo-bar-baz.txt
~~~

### Namespace

Mecha uses `.` character to represent a _namespace_ in file name:

~~~ .txt
foo.bar-baz.txt
~~~

When converted by [`__f2c__`][link:../reference/function#reference:file-to-class] function, the file name above (without the file extension) will be returned into this:

~~~ .txt
Foo\BarBaz
~~~

### Partial

Prefix a file name with a `-` to tell the engine that the file is a part of another file:

~~~ .txt
page.php
~~~

~~~ .txt
-page.header.php
-page.body.php
-page.footer.php
~~~

### Hidden

Prefix a file name with a `.` or a `_` character to represent a hidden file:

~~~ .txt
.foo-bar.txt
_foo-bar.txt
~~~