---
title: Extending the `Page` Class
description: Creating custom page constructor.
...

Any page properties generated by the `Page` class will be equipped with dynamic property hooks prefixed by a `page`.

~~~ .php
<?php

$page = new Page('.\lot\page\about.page');

Hook::set('page.title', function($title) {
    return '<mark>' . $title . '</mark>';
});

echo $page->title;
~~~

The `page` prefix is available globally to all classes that extends to this class. If you extend another class to this class, then a new hook prefix will be added automatically based on the child class name. Here are two examples:

Without _namespace_:

~~~ .php
<?php

// `article.php`
class Article extends Page {}
~~~

~~~ .php
<?php

$article = new Article('.\lot\page\about.page');

Hook::set('article.title', function($title) {
    return '<mark>' . $title . '</mark>';
});

echo $article->title;
~~~

With _namespace_:

~~~ .php
<?php namespace Page;

// `page.event.php`
class Event extends Page {}
~~~

~~~ .php
<?php

$event = new Page\Event('.\lot\page\about.page');

Hook::set('page\event.title', function($title) {
    return '<mark>' . $title . '</mark>';
});

echo $event->title;
~~~