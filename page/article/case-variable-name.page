---
title: Variable Naming Best Practices
description: Mecha has some disciplines in naming their variables.
...

### General

[Reserved variables][link:../reference/variable] in _Mecha_ should match to `^[a-z]+(?:_[a-z\d]+)*$` pattern:

~~~ .php
$site
~~~

User variable style should be prefixed by a `_` to prevent collision with the reserved variables:

~~~ .php
$_site
~~~

> **Note:** If for a reason, the reserved variables are overwritten, you can always restore the original variable value by accessing the global variables defined by the [`Lot`][link:../reference/class/lot] class:
> ~~~ .php
> $site = null; // :(
> echo $site->title; // :'(
>
> $site = Lot::get('site'); // :)
> echo $site->title; // :*
> ~~~

### Namespace

Another way to safely writing variables is by _namespace_-ing your variable name:

~~~ .php
$my_site
~~~

### Others

Common variable names using a letter with their meaning:

 - `$a` → [array][link:../reference/class/anemon] container
 - `$b` → base
 - `$c` → [class][link:../reference/class/h-t-m-l], [configuration][link:../reference/class/config]
 - `$d` → [directory][link:../reference/class/path]
 - `$e` → [evaluate][link:../reference/function#reference:e]
 - `$f` → [file][link:../reference/class/file]
 - `$g` → results of the `glob` function
 - `$h` → hint
 - `$i` → increment, integer, number
 - `$j` → length of the `$a` (used in `for` loop)
 - `$k` → array key
 - `$l` → ?
 - `$m` → matches
 - `$n` → [name][link:../reference/class/path]
 - `$o` → array container, output container
 - `$p` → [page][link:../reference/class/page], [path][link:../reference/class/path]
 - `$q` → [query][link:../reference/class/h-t-t-p/query]
 - `$r` → ?
 - `$s` → placeholder, universal variable
 - `$t` → title, text
 - `$u` → [union][link:../reference/class/union], [URL][link:../reference/class/u-r-l], URL part
 - `$v` → array value
 - `$w` → ?
 - `$x` → test, [file extension][link:../reference/class/path]
 - `$y` → ?
 - `$z` → ?