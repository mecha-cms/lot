---
title: Class `Block`
description: Parse block patterns in page content.
...

> **Info:** This class is located in `lot\extend\block\engine\kernel` folder.

### Set

~~~ .xmp.php
Block::set($id, $fn);
~~~

Define a new block:

~~~ .php
Block::set('mark', function($content) {
    return str_replace(['[[mark]]', '[[/mark]]'], ['<mark>', '</mark>'], $content);
});
~~~

The code above will parse this page content:

~~~ .php
Lorem ipsum [‌[‌mark‌]‌]dolor[‌[‌/‌mark‌]‌] `‌[‌[‌mark‌]‌]‌`sit`‌[‌[‌/‌mark‌]‌]‌` amet.
~~~

… into this:

~~~ .php
Lorem ipsum <‌mark‌>dolor<‌/‌mark‌> [‌[‌mark‌]‌]sit[‌[‌/‌mark‌]‌] amet.
~~~

### Get

~~~ .xmp.php
Block::get($id, $fail = false);
~~~

Return the `mark` block data if any, otherwise, return `$fail`:

~~~ .php
if ($fn = Block::get('mark')) {
    // do something with `$fn`…
}
~~~

### Reset

~~~ .xmp.php
Block::reset($id);
~~~

Disable the `mark` block pattern:

~~~ .php
Block::reset('mark');
~~~

### Replace

~~~ .xmp.php
Block::replace($id, $fn, $content, $strict = false);
~~~

Replace `mark` block in `$content` with advance pattern:

~~~ .php
Block::set('mark', function($content) {
    return Block::replace('mark', function($a, $b) {
        $c = "";
        if (isset($b['color'])) {
            $c = ' style="background-color:' . $b['color'] . ';";
        }
        return '<mark' . $c . '>' . $a . '</mark>';
    });
});
~~~

The code above will parse this page content:

~~~ .php
Lorem [‌[‌mark‌]‌]ipsum[‌[‌/‌mark‌]‌] [‌[‌mark color="#f00"‌]‌]dolor[‌[‌/‌mark‌]‌] `‌[‌[‌mark‌]‌]‌`sit`‌[‌[‌/‌mark‌]‌]‌` `‌[‌[‌mark color="#f00"‌]‌]‌`amet`‌[‌[‌/‌mark‌]‌]‌`.
~~~

… into this:

~~~ .php
Lorem <‌mark‌>ipsum<‌/‌mark‌> <‌mark style="background-color:#f00;"‌>dolor<‌/‌mark‌> [‌[‌mark‌]‌]sit[‌[‌/‌mark‌]‌] [‌[‌mark color="#f00"‌]‌]amet[‌[‌/‌mark‌]‌].
~~~

[connect:../extension/block]