---
@version: [2, current]
@description: Sort all items.
@lot: $sort = 1, $preserve_key = false
@example: |
  $array = [
      'foo' => [
          'size' => 'medium',
          'color' => 'green',
          'id' => 2
      ],
      'bar' => [
          'id' => 4
      ],
      'baz' => [
          'size' => 'large',
          'color' => 'blue',
          'id' => 3
      ],
      'qux' => [
          'size' => 'small',
          'color' => 'red',
          'id' => 1
      ]
  ];


  //  1: ASC
  // -1: DESC

  // Basic
  $A = Anemon::eat($array)->sort(1)->vomit();

  // Sort by value of the `color` property
  $B = Anemon::eat($array)->sort([1, 'color'])->vomit();

  // Preserve original array key
  $C = Anemon::eat($array)->sort([-1, 'color'], true)->vomit();

  // Set default value of array item with missing `color` property as `#black`
  $D = Anemon::eat($array)->sort([-1, 'color', '#black'])->vomit();

  // Custom sort (sort by the third character of `size` value)
  $E = Anemon::eat($array)->sort(function($a, $b) {
      if (!isset($a['size'][2]) && !isset($b['size'][2]))
          return 0;
      if (!isset($a['size'][2]))
          return 1;
      if (!isset($b['size'][2]))
          return -1;
      return $a['size'][2] <=> $b['size'][2];
  })->vomit();
@result: |
  $A = [
      0 => [
          'id' => 4
      ],
      1 => [
          'size' => 'large',
          'color' => 'blue',
          'id' => 3
      ],
      2 => [
          'size' => 'medium',
          'color' => 'green',
          'id' => 2
      ],
      3 => [
          'size' => 'small',
          'color' => 'red',
          'id' => 1
      ]
  ];
  
  $B = [
      0 => [
          'size' => 'large',
          'color' => 'blue',
          'id' => 3
      ],
      1 => [
          'size' => 'medium',
          'color' => 'green',
          'id' => 2
      ],
      2 => [
          'size' => 'small',
          'color' => 'red',
          'id' => 1
      ],
      3 => [
          'id' => 4
      ]
  ];
  
  $C = [
      'bar' => [
          'id' => 4
      ],
      'qux' => [
          'size' => 'small',
          'color' => 'red',
          'id' => 1
      ],
      'foo' => [
          'size' => 'medium',
          'color' => 'green',
          'id' => 2
      ],
      'baz' => [
          'size' => 'large',
          'color' => 'blue',
          'id' => 3
      ]
  ];
  
  $D = [
      0 => [
          'size' => 'small',
          'color' => 'red',
          'id' => 1
      ],
      1 => [
          'size' => 'medium',
          'color' => 'green',
          'id' => 2
      ],
      2 => [
          'size' => 'large',
          'color' => 'blue',
          'id' => 3
      ],
      3 => [
          'id' => 4,
          'color' => '#black'
      ]
  ];

  $E = [
      0 => [
          'size' => 'small',
          'color' => 'red',
          'id' => 1
      ],
      1 => [
          'size' => 'medium',
          'color' => 'green',
          'id' => 2
      ],
      2 => [
          'size' => 'large',
          'color' => 'blue',
          'id' => 3
      ],
      3 => [
          'id' => 4
      ]
  ];
...