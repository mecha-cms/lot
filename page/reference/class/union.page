---
title: Class `Union`
description: Universal markup constructor.
...

### Constructor

~~~ .xmp.php
Union($union = []);
~~~

Start by creating a new class construct:

~~~ .php
$union = new Union();
~~~

#### Unite

~~~ .xmp.php
->unite($unit = 'html', $content = "", $data = [], $dent = 0);
~~~

Generate markup:

~~~ .php
$test_1 = $union->unite();
$test_2 = $union->unite('div', 'test content');
$test_3 = $union->unite('a', 'a link', ['href' => '/']);
$test_4 = $union->unite('input', false, ['type' => 'text']);
~~~

Result:

~~~ .php
$test_1 = '<html></html>';
~~~

~~~ .php
$test_2 = '<div>test content</div>';
~~~

~~~ .php
$test_3 = '<a href="/">a link</a>';
~~~

~~~ .php
$test_4 = '<input type="text">';
~~~

#### Apart

~~~ .xmp.php
->apart($input, $eval = true);
~~~

Inverse version of `$union->unite()`:

~~~ .php
__test__(
    $union->apart('<a></a>'),
    $union->apart('<a>test content</a>'),
    $union->apart('<a href="/">test content</a>'),
    $union->apart('<input>'),
    $union->apart('<input type="text">'),
    $union->apart('<input type="text" disabled readonly="">'),
    $union->apart('<foo a="1" b=".5" c="true" d="null" e="abc" f="{
        &quot;foo&quot;: &quot;bar&quot;,
        &quot;baz&quot;: &quot;1&quot;
    }">'),
    $union->apart('<foo a="1" b=".5" c="true">', false),
    $union->apart('#')
);
~~~

Result:

~~~ .php
[
    0 => 'a',
    1 => "",
    2 => []
]
~~~

~~~ .php
[
    0 => 'a',
    1 => 'test content',
    2 => []
]
~~~

~~~ .php
[
    0 => 'a',
    1 => 'test content',
    2 => [
        'href' => '/'
    ]
]
~~~

~~~ .php
[
    0 => 'input',
    1 => false,
    2 => []
]
~~~

~~~ .php
[
    0 => 'input',
    1 => false,
    2 => [
        'type' => 'text'
    ]
]
~~~

~~~ .php
[
    0 => 'input',
    1 => false,
    2 => [
        'type' => 'text',
        'disabled' => 'disabled',
        'readonly' => ""
    ]
]
~~~

~~~ .php
[
    0 => 'foo',
    1 => false,
    2 => [
        'a' => 1,
        'b' => .5,
        'c' => true,
        'd' => null,
        'e' => 'abc',
        'f' => [
            'foo' => 'bar',
            'baz' => '1'
        ]
    ]
]
~~~

~~~ .php
[
    0 => 'foo',
    1 => false,
    2 => [
        'a' => '1',
        'b' => '.5',
        'c' => 'true'
    ]
]
~~~

~~~ .php
false
~~~

#### Begin

~~~ .xmp.php
->begin($unit = 'html', $data = [], $dent = 0);
~~~

~~~ .php
echo $union->unite('!DOCTYPE html', false) . N;
echo $union->begin('html', ['dir' => 'ltr']) . N;
echo $union->begin('head', [], 1) . N;
echo $union->begin('title', [], 2) . N;
echo $union->dent(3) . 'test title' . N;
~~~

Result:

~~~ .php
<!DOCTYPE html>
<html dir="ltr">
  <head>
    <title>
      test title

~~~

#### End

~~~ .xmp.php
->end($unit = null, $dent = null);
~~~

Close the opened `<title>` tag:

~~~ .php
echo $union->end('title');
~~~

~~~ .php
echo $union->end('title', 0);
~~~

Result:

~~~ .php
<!DOCTYPE html>
<html dir="ltr">
  <head>
    <title>
      test title
    </title>
~~~

~~~ .php
<!DOCTYPE html>
<html dir="ltr">
  <head>
    <title>
      test title
</title>
~~~

Close all of the opened tags:

~~~ .php
echo $union->end(true);
~~~

Result:

~~~ .php
<!DOCTYPE html>
<html dir="ltr">
  <head>
    <title>
      test title
    </title>
  </head>
</html>
~~~

Close with broken tag:

~~~ .php
echo $union->end('foo');
~~~

Result:

~~~ .php
<!DOCTYPE html>
<html dir="ltr">
  <head>
    <title>
      test title
    </foo>
~~~

#### Comments

~~~ .xmp.php
->__($content, $dent = 0, $block = N);
~~~

Create markup comments:

~~~ .php
$test_1 = $union->__('test comment');
$test_2 = $union->__('test comment', 1);
$test_3 = $union->__('test comment', 0, ' ');
$test_4 = $union->__('test comment', 1, ' ');
~~~

Result:

~~~ .php
$test_1 = '<!--
test comment
-->';
~~~

~~~ .php
$test_2 = '  <!--
test comment
  -->';
~~~

~~~ .php
$test_3 = '<!-- test comment -->';
~~~

~~~ .php
$test_4 = '  <!-- test comment -->';
~~~

---

### Advance

#### Create Custom Markup

~~~ .xmp.php
->union = [
    1 => [
        0 => ['<', '>', '/', '[\w:.-]+'],
        1 => ['=', '"', '"', ' ', '[\w:.-]+'],
        2 => ['<!--', '-->']
    ]
];
~~~

~~~ .php
$union = new Union([
    1 => [
        0 => ['{{', '}}', 'end', '[\w:.-]+'],
        1 => ['=', '"', '"', ' ', '[\w:.-]+'],
        2 => ['{{!', '!}}']
    ]
]);

$test_1 = $union->unite('foo', 'content', ['bar' => 'baz']);
$test_2 = $union->unite('bar', false, ['qux' => '1']);
$test_3 = $union->__('test comment', 0, ' ');
$test_4 = $union->apart('{{foo bar}}');
$test_5 = $union->apart('<foo bar>');
~~~

Result:

~~~ .php
$test_1 = '{{foo bar="baz"}}content{{endfoo}}';
~~~

~~~ .php
$test_2 = '{{bar qux="1"}}';
~~~

~~~ .php
$test_3 = '{{! test comment !}}';
~~~

~~~ .php
$test_4 = [
    0 => 'foo',
    1 => false,
    2 => [
        'bar' => 'bar'
    ]
];
~~~

~~~ .php
$test_5 = false;
~~~