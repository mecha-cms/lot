---
@version: [current]
@description: Load assets by its file extension.
@lot:
- string $x, string $join = ""
@static: 1
...

Hooks storage will group your assets data based on its file extension. When you do `Asset::set('foo.css')` and `Asset::set('bar.css')` for example, actually, you are just doing this internally:

~~~ .php
Asset::$lot = [
    '.css' => [
        1 => [
            'foo.css' => [
                0 => null,
                1 => "",
                2 => [
                    'path' => '.\lot\asset\foo.css',
                    'url' => 'http://127.0.0.1/lot/asset/foo.css'
                ],
                'stack' => 10
            ],
            'bar.css' => [
                0 => null,
                1 => "",
                2 => [
                    'path' => '.\lot\asset\bar.css',
                    'url' => 'http://127.0.0.1/lot/asset/bar.css'
                ],
                'stack' => 10
            ]
        ]
    ]
];
~~~

Calling the `Asset::join()` method will return a merged version of the file contents that are generated by reading all of the available valid `path` data. Other than that, the result will depends on [`Asset::_()`][link:_] method definition related to the file extension. For example, all files with extension `.js` will be returned as a list of HTML `<script>` tags with `url` data as the `src` attribute value:

~~~ .php
echo Asset::join('.css');
~~~

~~~ .php
echo Asset::join('.js');
~~~

~~~ .php
echo Asset::join('.json'); // Not yet defined by `Asset::_()`, calling this will return the file contents
~~~