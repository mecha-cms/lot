---
title: Class `Page`
description: Working with pages.
...

### Open

~~~ .xmp.php
Page::open($path, $lot = [], $NS = 'page');
~~~

Initialize by opening a page file:

~~~ .php
Page::open('path\to\file.page');
~~~

#### Data

~~~ .xmp.php
->data($input, $fn = null);
~~~

Set page header:

~~~ .php
Page::open('path\to\file.page')->data([
    'title' => 'Page Title',
    'description' => 'Page description.',
    'author' => 'Taufik Nurrohman',
    'type' => 'HTML'
]);
~~~

~~~ .php
Page::open('path\to\file.page')->data('title', function($data) {
    return $data['author']; // ← set `author` value as the `title`
});
~~~

Set page content:

~~~ .php
Page::open('path\to\file.page')->data('<p>Page content.</p>');
~~~

Remove `title` data:

~~~ .php
Page::open('path\to\file.page')->data(['title' => false]);
~~~

Set `title` data as `false`:

~~~ .php
Page::open('path\to\file.page')->data(['title' => 'false']);
~~~

Remove page content:

~~~ .php
Page::open('path\to\file.page')->data(false);
~~~

#### Get

~~~ .xmp.php
->get($key = null, $fail = null, $NS = 'page');
~~~

Get `title` property from a page if available, otherwise, return `Untitled`:

~~~ .php
$test = Page::open('path\to\file.page')->get('title', 'Untitled');
~~~

Get `title` and `url` properties from a page:

~~~ .php
$test = Page::open('path\to\file.page')->get([
    'title' => 'Untitled',
    'url' => '#'
]);
~~~

#### Save

~~~ .xmp.pgp
->save($consent = 0600);
~~~

Update page data:

~~~ .php
Page::open('path\to\file.page')->data(['title' => 'New Title'])->save();
~~~

#### Save To

~~~ .xmp.php
->saveTo($path, $consent = 0600);
~~~

Create a new page:

~~~ .php
Page::data([
    'title' => 'Page Title',
    'type' => 'HTML',
    'content' => '<p>Page content.</p>'
])->saveTo('path\to\file.page');
~~~

### Unite

~~~ .xmp.php
Page::unite($input);
~~~

Convert array input into page file content:

~~~ .php
$test = Page::unite([
    'title' => 'Page Title',
    'description' => 'Page description.',
    'author' => 'Taufik Nurrohman',
    'type' => 'HTML',
    'content' => '<p>Page content.</p>'
]);
~~~

Result:

~~~ .yaml
---
title: Page Title
description: Page description.
author: Taufik Nurrohman
type: HTML
...

<p>Page content.</p>
~~~

### Apart

~~~ .xmp.php
Page::apart($input, $key = null, $fail = null);
~~~

Convert page file content into array:

~~~ .php
$input = '---
title: Page Title
description: Page description.
author: Taufik Nurrohman
type: HTML
status: 1
...

<p>Page content.</p>';

$test_1 = Page::apart($input);
$test_2 = Page::apart($input, 'type');
~~~

Result:

~~~ .php
$test_1 = [
    'title' => 'Page Title',
    'description' => 'Page description.',
    'author' => 'Taufik Nurrohman',
    'type' => 'HTML',
    'status' => '1', // a string
    'content' => '<p>Page content.</p>'
];
~~~

~~~ .php
$test_2 = 'HTML';
~~~

---

### Constructor

~~~ .xmp.php
Page($input = null, $lot = [], $NS = 'page');
~~~

~~~ .php
$page = new Page('path\to\file.page');
~~~

[connect:../../snippet/noob/page]