---
title: Class `Page`
description: Working with pages.
...

### Open

~~~ .xmp.php
Page::open($path, $shift = "");
~~~

Initialize by opening a page file:

~~~ .php
Page::open('path\to\file.page');
~~~

### Data

~~~ .xmp.php
->data($a, $fn = null);
~~~

Set page headers:

~~~ .php
Page::open('path\to\file.page')->data([
    'title' => 'Page Title',
    'description' => 'Page description.',
    'author' => 'Taufik Nurrohman',
    'type' => 'HTML'
]);
~~~

~~~ .php
Page::open('path\to\file.page')->data('title', function($data) {
    return $data['author']; // ← set `author` value as the `title`
});
~~~

Set page content:

~~~ .php
Page::open('path\to\file.page')->data('<p>Page content.</p>');
~~~

Remove `title` data:

~~~ .php
Page::open('path\to\file.page')->data(['title' => false]);
~~~

Set `title` data as `false`:

~~~ .php
Page::open('path\to\file.page')->data(['title' => 'false']);
~~~

Remove page content:

~~~ .php
Page::open('path\to\file.page')->data("");
~~~

### Unite

~~~ .xmp.php
Page::unite($input = null);
~~~

Convert array input into page file content:

~~~ .php
$test = Page::unite([
    'title' => 'Page Title',
    'description' => 'Page description.',
    'author' => 'Taufik Nurrohman',
    'type' => 'HTML',
    'content' => '<p>Page content.</p>'
]);
~~~

Result:

~~~ .yaml
---
title: Page Title
description: Page description.
author: Taufik Nurrohman
type: HTML
...

<p>Page content.</p>
~~~

### Apart

~~~ .xmp.php
Page::apart($input = null);
~~~

Convert page file content into array:

~~~ .php
$test = Page::apart('---
title: Page Title
description: Page description.
author: Taufik Nurrohman
type: HTML
...

<p>Page content.</p>')->get();
~~~

Result:

~~~ .php
$test = [
    'path' => "",
    'time' => 1483259587,
    'update' => 1483259587,
    'kind' => [0],
    'slug' => '--',
    'state' => 'page',
    'title' => 'Page Title',
    'description' => 'Page description.',
    'type' => 'HTML',
    'author' => 'Taufik Nurrohman',
    'link' => null,
    'content' => '<p>Page content.</p>',
    'url' => 'http://localhost/--',
    'date' => Date::__set_state([
        'date' => 1483259587
    ])
];
~~~

### Read

~~~ .xmp.php
->read($output = [], $NS = 'page');
~~~

Read page file as array and add a `link` property with value `http://example.com` if missing:

~~~ .php
$test = Page::open('path\to\file.page')->read([
    'link' => 'http://example.com'
]);
~~~

### Get

~~~ .xmp.php
->get($key = null, $fail = "", $NS = 'page');
~~~

Get `title` property from a page if available, otherwise, return `Untitled`:

~~~ .php
$test = Page::open('path\to\file.page')->get('title', 'Untitled');
~~~

### Save

~~~ .xmp.pgp
->save($consent = 0600);
~~~

Update page data:

~~~ .php
Page::open('path\to\file.page')->data(['title' => 'New Title'])->save();
~~~

### Save To

~~~ .xmp.php
->saveTo($path, $consent = 0600);
~~~

Create a new page:

~~~ .php
Page::data([
    'title' => 'Page Title',
    'type' => 'HTML',
    'content' => '<p>Page content.</p>'
])->saveTo('path\to\file.page');
~~~

---

### Constructor

~~~ .xmp.php
Page($input = null, $shift = "", $lot = [], $NS = 'page');
~~~

~~~ .php
$page = new Page('path\to\file.page');
~~~