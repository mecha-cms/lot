---
title: `Form`
description: HTML forms.
icon: M17,9H7V7H17M17,13H7V11H17M14,17H7V15H14M12,3A1,1 0 0,1 13,4A1,1 0 0,1 12,5A1,1 0 0,1 11,4A1,1 0 0,1 12,3M19,3H14.82C14.4,1.84 13.3,1 12,1C10.7,1 9.6,1.84 9.18,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z
parent: h-t-m-l
...

[[e]]
echo "### Methods\n";
foreach (glob(PAGE . DS . $url->path . DS . '*.page') as $v) {
    $n = basename($v, '.page');
    if ($n === '$') continue;
    $v = Page::open($v);
    echo "\n - [" . $v->title . '](' . $v->url . ')';
}
[[/e]]

> **Note:** All string in the text area content and HTML attribute values will be HTML encoded.

To disable the form field, prepend a `.` to the form name. For `<select>` elements, to disable some option fields, prepend a `.` to the array key in the option list.

~~~ .php
$test_1 = Form::button('.x'); // disabled button
$test_2 = Form::input('.x'); // disabled input
$test_3 = Form::select('.x'); // disabled select
$test_4 = Form::textarea('.x'); // disabled textarea
$test_5 = Form::textarea('\.x'); // not disabled, this will create `<textarea name=".x">`
~~~

~~~ .php
$test_1 = Form::select('x', [
    '.0' => 'red', // disabled
    '1' => 'green',
    '2' => 'blue'
]);

$test_2 = Form::input('x', [
    '.Color' => [ // disabled
        '0.0' => 'red',
        '0.1' => 'green',
        '0.2' => 'blue'
    ],
    'Size' => [
        '.1.0' => 'small', // disabled
        '1.1' => 'medium',
        '1.2' => 'large'
    ]
]);
~~~

Other prefix:

Prefix | Description
------ | -----------
`.` | Disabled form elements.
`!` | Read-only form elements.
`*` | Required form elements.