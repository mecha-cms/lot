---
@version: [2, current]
@description: HTML forms.
@icon: M17,7H22V17H17V19A1,1 0 0,0 18,20H20V22H17.5C16.95,22 16,21.55 16,21C16,21.55 15.05,22 14.5,22H12V20H14A1,1 0 0,0 15,19V5A1,1 0 0,0 14,4H12V2H14.5C15.05,2 16,2.45 16,3C16,2.45 16.95,2 17.5,2H20V4H18A1,1 0 0,0 17,5V7M2,7H13V9H4V15H13V17H2V7M20,15V9H17V15H20Z
@parent: h-t-m-l
...

> **Note:** All string in the text area content and HTML attribute values will be HTML encoded. Special for the `$placeholder` variable, writing text in the form of HTML entity will escape the ampersand character so it will look like escaping the character two times. But this only applies to HTML entities that is not represented in HEX.

To disable the form field, prepend a `.` to the form name. For `<select>` elements, to disable some option fields, prepend a `.` to the array key in the option list.

~~~ .php
$A = Form::button('.x'); // disabled button
$B = Form::input('.x'); // disabled input
$C = Form::select('.x'); // disabled select
$D = Form::textarea('.x'); // disabled textarea
$E = Form::textarea('\.x'); // not disabled, this will create `<textarea name=".x">`
~~~

~~~ .php
$A = Form::select('x', [
    '.0' => 'red', // disabled
    '1' => 'green',
    '2' => 'blue'
]);

$B = Form::input('x', [
    '.Color' => [ // disabled
        '0.0' => 'red',
        '0.1' => 'green',
        '0.2' => 'blue'
    ],
    'Size' => [
        '.1.0' => 'small', // disabled
        '1.1' => 'medium',
        '1.2' => 'large'
    ]
]);
~~~

Other prefix:

Prefix | Description
------ | -----------
`.` | Disabled form elements.
`!` | Read-only form elements.
`*` | Required form elements.