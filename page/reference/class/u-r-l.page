---
title: Class `URL`
description: Extract current URL data.
...

### Long

~~~ .xmp.php
URL::long($url, $root = true);
~~~

Convert relative URL into full URL:

~~~ .php
__test__(
    URL::long(""),
    URL::long('foo'),
    URL::long('?foo'),
    URL::long('&foo'),
    URL::long('#foo'),
    URL::long('javascript:;'),
    URL::long('foo/bar'),
    URL::long('//foo'),
    URL::long('http://foo'),
    URL::long('/'),
    URL::long('/foo'),
    URL::long('/?foo'),
    URL::long('/&foo'),
    URL::long('/#foo'),
    URL::long('/javascript:;'),
    URL::long('/foo/bar')
);
~~~

> **Note:** If `$root` is `false`, then a `/` character at the beginning of URL path will be ignored, and the result will always relative to the URL path where the CMS is being installed. The `$root` parameter changes makes sense only when Mecha is installed in a sub–directory.

Result:

~~~ .txt
[[url.protocol]][[url.host]]/directory
~~~

~~~ .txt
[[url.protocol]][[url.host]]/directory/foo
~~~

~~~ .txt
?foo
~~~

~~~ .txt
&foo
~~~

~~~ .txt
#foo
~~~

~~~ .txt
javascript:;
~~~

~~~ .txt
[[url.protocol]][[url.host]]/directory/foo/bar
~~~

~~~ .txt
//foo
~~~

~~~ .txt
http://foo
~~~

~~~ .txt
[[url.protocol]][[url.host]]/foo
~~~

~~~ .txt
?foo
~~~

~~~ .txt
&foo
~~~

~~~ .txt
#foo
~~~

~~~ .txt
javascript:;
~~~

~~~ .txt
[[url.protocol]][[url.host]]/foo/bar
~~~

### Short

~~~ .xmp.php
URL::short($url, $root = true);
~~~

Convert full URL into relative URL:

~~~ .php
__test__(
    URL::short('[[url.protocol]][[url.host]]/directory'),
    URL::short('[[url.protocol]][[url.host]]/directory/foo'),
    URL::short('[[url.protocol]][[url.host]]/directory?foo'),
    URL::short('[[url.protocol]][[url.host]]/directory&foo'),
    URL::short('[[url.protocol]][[url.host]]/directory#foo'),
    URL::short('[[url.protocol]][[url.host]]/directory/javascript:;'),
    URL::short('[[url.protocol]][[url.host]]/directory/foo/bar'),
    URL::short('//foo'),
    URL::short('http://foo'),
    URL::short('[[url.protocol]][[url.host]]/directory', false),
    URL::short('[[url.protocol]][[url.host]]/directory/foo', false),
    URL::short('[[url.protocol]][[url.host]]/directory?foo', false),
    URL::short('[[url.protocol]][[url.host]]/directory&foo', false),
    URL::short('[[url.protocol]][[url.host]]/directory#foo', false),
    URL::short('[[url.protocol]][[url.host]]/directory/javascript:;', false),
    URL::short('[[url.protocol]][[url.host]]/directory/foo/bar', false),
    URL::short('//foo', false),
    URL::short('http://foo', false)
);
~~~

> **Note:** If `$root` is `false`, then the sub–directory path where the CMS is being installed will be removed too, and the leading `/` will also be removed. The `$root` parameter changes makes sense only when Mecha is installed in a sub–directory.

Result:

~~~ .txt
/directory
~~~

~~~ .txt
/directory/foo
~~~

~~~ .txt
/directory?foo
~~~

~~~ .txt
/directory&foo
~~~

~~~ .txt
/directory#foo
~~~

~~~ .txt
/directory/javascript:;
~~~

~~~ .txt
/directory/foo/bar
~~~

~~~ .txt
//foo
~~~

~~~ .txt
http://foo
~~~

~~~ .txt

~~~

~~~ .txt
foo
~~~

~~~ .txt
?foo
~~~

~~~ .txt
&foo
~~~

~~~ .txt
#foo
~~~

~~~ .txt
javascript:;
~~~

~~~ .txt
foo/bar
~~~

~~~ .txt
//foo
~~~

~~~ .txt
http://foo
~~~

### Initial

~~~ .xmp.php
URL::I($url);
~~~

Remove the trailing page offset from URL:

~~~ .php
__test__(
    URL::I('[[url]]/blog'),
    URL::I('[[url]]/blog/4')
);
~~~

Result:

~~~ .txt
[[url]]/blog
~~~

~~~ .txt
[[url]]/blog
~~~

---

### Advance

#### Constructor

~~~ .xmp.php
URL();
~~~

Inspect URL properties:

~~~ .php
$url = new URL();

echo $url->path; // return the URL path
echo $url->path('#'); // return the URL path if any, otherwise, return `#`
echo $url; // return `$url->url` (the base URL)
~~~

The available properties:

~~~ .txt
// [[url.protocol]][[url.host]]/directory/foo/bar?foo=bar#foo

$url → [[url.protocol]][[url.host]]/directory
 │
 ├── scheme: [[url.scheme]]
 ├── protocol: [[url.protocol]]
 ├── host: [[url.host]]
 ├── port: [[url.port]]
 ├── user: null ← or depends on `$_SESSION['url']['user']`
 ├── pass: null ← or depends on `$_SESSION['url']['pass']`
 ├── directory: directory
 ├── url: [[url.protocol]][[url.host]]/directory
 ├── path: foo/bar
 ├── query: ?foo=bar
 ├── previous: null ← or depends on `$_SESSION['url']['previous']`
 ├── current: [[url.protocol]][[url.host]]/directory/foo/bar
 ├── next: null ← or depends on `$_SESSION['url']['next']`
 └── hash: null ← or depends on `$_COOKIE['url']['hash']`
~~~