---
title: `$u_r_l::long()`
description: Convert relative URL into full URL.
...

~~~ .php.xmp
URL::long($url, $root = true);
~~~

**Example:**

~~~ .php
__test__(
    URL::long(""),
    URL::long('foo'),
    URL::long('?foo'),
    URL::long('&foo'),
    URL::long('#foo'),
    URL::long('javascript:;'),
    URL::long('foo/bar'),
    URL::long('//foo'),
    URL::long('http://foo'),
    URL::long('/'),
    URL::long('/foo'),
    URL::long('/?foo'),
    URL::long('/&foo'),
    URL::long('/#foo'),
    URL::long('/javascript:;'),
    URL::long('/foo/bar')
);
~~~

> **Note:** If `$root` is `false`, then a `/` character at the beginning of URL path will be ignored, and the result will always relative to the URL path where the CMS is being installed. The `$root` parameter changes makes sense only when Mecha is installed in a sub-directory.

Result:

~~~ .txt
%{url.protocol}%%{url.host}%/directory
~~~

~~~ .txt
%{url.protocol}%%{url.host}%/directory/foo
~~~

~~~ .txt
?foo
~~~

~~~ .txt
&foo
~~~

~~~ .txt
#foo
~~~

~~~ .txt
javascript:;
~~~

~~~ .txt
%{url.protocol}%%{url.host}%/directory/foo/bar
~~~

~~~ .txt
//foo
~~~

~~~ .txt
http://foo
~~~

~~~ .txt
%{url.protocol}%%{url.host}%/foo
~~~

~~~ .txt
?foo
~~~

~~~ .txt
&foo
~~~

~~~ .txt
#foo
~~~

~~~ .txt
javascript:;
~~~

~~~ .txt
%{url.protocol}%%{url.host}%/foo/bar
~~~