---
title: `__construct()`
description: Constructor.
...

~~~ .php.xmp
URL($input = null);
~~~

Inspect URL properties:

~~~ .php
$url = new URL('%{url.protocol}%%{url.host}%/directory/foo/bar?foo=bar&baz=qux#foo');

echo $url->path; // return the URL path `foo/bar`
echo $url->path('.'); // return the URL path as `foo.bar`
echo $url; // return `$url->{'$'}` (the base URL)

echo $url->query; // return the URL query string `?foo=bar&baz=qux`
echo $url->query('&amp;'); // return the URL query string as `?foo=bar&amp;baz=qux``
echo $url->query(['{', ',', ':', '}']); // return the URL query string as `{foo:bar,baz:qux}`

echo $url->hash; // return the URL hash string if any `#foo`
echo $url->hash('$'); // return the URL hash string if any as `$foo`
~~~

The available properties:

~~~ .txt
// %{url.protocol}%%{url.host}%/directory/foo/bar?foo=bar#foo

$url → %{url.protocol}%%{url.host}%/directory
 │
 ├── scheme: %{url.scheme}%
 ├── protocol: %{url.protocol}%
 ├── host: %{url.host}%
 ├── port: %{url.port}%
 ├── user: null ← or depends on `$_SESSION['url']['user']`
 ├── pass: null ← or depends on `$_SESSION['url']['pass']`
 ├── directory: directory
 ├── $: %{url.protocol}%%{url.host}%/directory
 ├── url: %{url.protocol}%%{url.host}%/directory
 ├── path: foo/bar
 ├── query: ?foo=bar
 ├── previous: null ← or depends on `$_SESSION['url']['previous']`
 ├── current: %{url.protocol}%%{url.host}%/directory/foo/bar
 ├── next: null ← or depends on `$_SESSION['url']['next']`
 └── hash: null ← or depends on `$_COOKIE['url']['hash']`
~~~